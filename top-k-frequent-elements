#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>

using namespace std;

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> freq;

        for (int num : nums) {
            freq[num]++;
        }

        vector<pair<int, int>> elements(freq.begin(), freq.end());

        sort(elements.begin(), elements.end(), [](pair<int, int>& a, pair<int, int>& b) {
            return a.second > b.second;
        });
        vector<int> result;
        for (int i = 0; i < k; i++) {
            result.push_back(elements[i].first);
        }

        return result;
    }
};

int main() {
    Solution solution;
    vector<int> nums;
    int n, k;

    cout << "Enter the number of elements: ";
    cin >> n;
    nums.resize(n);
    
    cout << "Enter the numbers: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }

    cout << "Enter k: ";
    cin >> k;

    vector<int> result = solution.topKFrequent(nums, k);
    
    cout << "Top " << k << " frequent elements: ";
    for (int num : result) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}

